version: "3.8"

networks:
  monitoring:
    external: true
    name: monitoring

volumes:
  nautobot_postgres_data:
  loki_data:
  prometheus_data:
  grafana_data:
  alertmanager_data:

services:
  nautobot:
    image: networktocode/nautobot:latest
    ports:
      - "8001:8000"
    volumes:
      - ./config/nautobot_config.py:/opt/nautobot/nautobot_config.py
      - ./config/nautobot_plugin.yml:/opt/nautobot/plugins.yml
    depends_on:
      - nautobot-postgres
      - nautobot-redis
    networks:
      - monitoring

  nautobot-redis:
    image: redis:7.2-alpine
    command:
      - "sh"
      - "-c"
      - "redis-server --appendonly yes --requirepass redis-password"
    networks:
      - monitoring

  nautobot-postgres:
    image: postgres:14
    environment:
      POSTGRES_USER: nautobot
      POSTGRES_PASSWORD: nautobot
      POSTGRES_DB: nautobot
    volumes:
      - nautobot_postgres_data:/var/lib/postgresql/data
    networks:
      - monitoring

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9091:9090"
    command:
      - --storage.tsdb.retention.size=512MB
      - --config.file=/etc/prometheus/prometheus.yml
      - --web.enable-remote-write-receiver
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./config/prometheus-alerts.yml:/etc/prometheus/prometheus-alerts.yml
      - prometheus_data:/prometheus
    networks:
      - monitoring

  alertmanager:
    image: prom/alertmanager:latest
    ports:
      - "9094:9093"
    command: --config.file=/etc/alertmanager/alertmanager.yml --cluster.advertise-address=0.0.0.0:9093
    volumes:
      - ./config/alertmanager.yml:/etc/alertmanager/alertmanager.yml
      - alertmanager_data:/data
    networks:
      - monitoring

  node-exporter:
    image: prom/node-exporter:latest
    ports:
      - "9101:9100"
    command:
      - --path.rootfs=/host
    volumes:
      - /:/host:ro,rslave
    networks:
      - monitoring

  loki:
    image: grafana/loki:latest
    ports:
      - "3101:3100"
    command: -config.file=/etc/loki/loki-config.yml
    volumes:
      - ./config/loki-config.yml:/etc/loki/loki-config.yml
      - loki_data:/loki
    networks:
      - monitoring

  logstash:
    image: grafana/logstash-output-loki:latest
    ports:
      - "514:514/udp"
      - "12201:12201/udp"
    command: -f /home/logstash/logstash.cfg
    volumes:
      - ./config/logstash.conf:/home/logstash/logstash.cfg
    environment:
      XPACK_MONITORING_ENABLED: "false"
    networks:
      - monitoring

  telegraf:
    image: telegraf:latest
    ports:
      - "8125:8125/udp"
      - "9273:9273"
    command: telegraf --config /etc/telegraf/telegraf.conf
    volumes:
      - ./config/telegraf.conf:/etc/telegraf/telegraf.conf
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    volumes:
      - ./config/grafana-datasources.yml:/etc/grafana/provisioning/datasources/all.yml
      - ./config/grafana-dashboards.yml:/etc/grafana/provisioning/dashboards/all.yml
      - ./dashboards:/var/lib/grafana/dashboards
      - grafana_data:/var/lib/grafana
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
    networks:
      - monitoring